[tool:pytest]
# Pytest configuration file

# Test discovery
testpaths = test/testcases
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers
markers =
    smoke: marks tests as smoke tests
    regression: marks tests as regression tests
    api: marks tests as API tests
    user_management: marks tests as user management tests
    env(localhost): marks tests for localhost environment
    env(release): marks tests for release environment
    slow: marks tests as slow running
    integration: marks tests as integration tests
    unit: marks tests as unit tests

# Output options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --alluredir=test/reports/allure-results
    --clean-alluredir
    --allure-severities=critical,normal,minor,trivial
    --allure-features=User Management API
    --allure-stories=User CRUD Operations
    --allure-epics=User Management API

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = test/logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Test execution
minversion = 7.0
timeout = 300
timeout_method = thread

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning

# Coverage (if using pytest-cov)
# addopts = --cov=src --cov-report=html --cov-report=term-missing

# Custom options
env = localhost

